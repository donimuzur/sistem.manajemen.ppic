@using System.Web.Optimization
@using sistem.manajemen.ppic.core

@model sistem.manajemen.ppic.website.Models.TrnSuratPengantarBongkarMuatModel
@{
    ViewBag.Title = "Surat Pengantar Bongkar Muat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create", "TrnSuratPengantarBongkarMuat", FormMethod.Post, new { @id = "FormCreate", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-sm-4">
            <h2>@Model.Tittle</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action("Index", "Home")">Home</a>
                </li>
                <li class="active breadcrumb-item">
                    <a href="@Url.Action("Index", "TrnSuratPengantarBongkarMuat")">Surat Pengantar Bongkar Muat</a>
                </li>
                <li class="active breadcrumb-item">
                    <strong>Create</strong>
                </li>
            </ol>
        </div>
        <div class="col-sm-8">
            <div class="title-action">
                <button class="btn btn-success" id="btnSubmit" style="display:none" type="submit">Simpan</button>
                <button class="btn btn-success" onclick="PreSubmit()" type="button">Simpan</button>
                <a href="@Url.Action("Index", "TrnSuratPengantarBongkarMuat")" class="btn btn-danger">Batal</a>
            </div>
        </div>
    </div>

    <div class="wrapper wrapper-content">
        <div class="alert alert-danger alert-notification" style="display:none">
            Submit error, Silahkan check kembali !
        </div>
        
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>Informasi</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                        </div>
                    </div>
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="row">
                                    @Html.HiddenFor(model => model.ID)
                                    @Html.HiddenFor(model => model.CREATED_BY)
                                    @Html.HiddenFor(model => model.CREATED_DATE)
                                    @Html.HiddenFor(model => model.TANGGAL)
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">No Surat</label>
                                            @Html.TextBoxFor(model => model.NO_SURAT, new { @class = "form-control", @tabindex = "1", @style = "text-transform: uppercase;", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">No SPB</label>
                                            @Html.TextBoxFor(model => model.NO_SPB, new { @class = "form-control", @tabindex = "2", @style = "text-transform: uppercase;"})
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">No DO</label>
                                            @Html.TextBoxFor(model => model.NO_DO, new { @class = "form-control", @tabindex = "3", @style = "text-transform: uppercase;"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="ibox-footer">
                        <span style="color:red">
                            *
                        </span>
                        harus diisi
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>Data Transport</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                        </div>
                    </div>
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="row">
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Nama PT<span class="text-red">*</span></label>
                                            @Html.TextBoxFor(model => model.TRNSPT_NAMA_PT, new { @class = "form-control", @tabindex = "4", @style = "text-transform: uppercase;", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Jenis Kendaraan<span class="text-red">*</span></label>
                                            @Html.TextBoxFor(model => model.TRNSPT_JENIS_KENDARAAN, new { @class = "form-control", @tabindex = "5", @style = "text-transform: uppercase;", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">No Polisi<span class="text-red">*</span></label>
                                            @Html.TextBoxFor(model => model.TRNSPT_NO_POLISI, new { @class = "form-control", @tabindex = "6", @style = "text-transform: uppercase;", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Nama Supir<span class="text-red">*</span></label>
                                            @Html.TextBoxFor(model => model.TRNSPT_NAMA_SOPIR, new { @class = "form-control", @tabindex = "7", @style = "text-transform: uppercase;", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Jam Brngkt<span class="text-red">*</span></label>
                                            <div class="input-group clockpicker" data-autoclose="true">
                                                @Html.TextBoxFor(model => model.TRNSPT_JAM_DATANG, new { @class = "form-control", @tabindex = "8",@required = "required" })
                                                <span class="input-group-addon">
                                                    <span class="fa fa-clock-o"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="ibox-footer">
                        <span style="color:red">
                            *
                        </span>
                        harus diisi
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>Data Barang</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                        </div>
                    </div>
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="row">
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Nama Barang<span class="text-red">*</span></label>
                                            @Html.TextBoxFor(model => model.NAMA_BARANG, new { @class = "form-control", @tabindex = "9", @style = "text-transform: uppercase;", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Jenis Barang<span class="text-red">*</span></label>
                                            @Html.DropDownListFor(model => model.JENIS_BARANG, Model.JenisbarangList,"Please Select",new { @class = "form-control" ,@tabindex = "10", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Bentuk</label>
                                            @Html.TextBoxFor(model => model.BENTUK, new { @class = "form-control", @tabindex = "11", @style = "text-transform: uppercase;", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Kemasan</label>
                                            @Html.TextBoxFor(model => model.KEMASAN, new { @class = "form-control", @tabindex = "12", @style = "text-transform: uppercase;", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Kuantum<span class="text-red">*</span></label>
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-addon">Kg</span>
                                                </div>
                                                @Html.TextBoxFor(model => model.KUANTUM, new { @class = "form-control numeric", @tabindex = "13", @required = "required" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Gudang</label>
                                            @Html.TextBoxFor(model => model.GUDANG, new { @class = "form-control", @tabindex = "14", @style = "text-transform: uppercase;" })
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                        <div class="form-group">
                                            <label class="control-label">Jam Muat<span class="text-red">*</span></label>
                                            @Html.TextBoxFor(model => model.JAM_MUAT, new { @class = "form-control", @tabindex = "15", @style = "text-transform: uppercase;", @required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="ibox-footer">
                        <span style="color:red">
                            *
                        </span>
                        harus diisi
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">
                    <div class="ibox-content">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    <label class="control-label">Catatan</label>
                                    @Html.TextAreaFor(model => model.CATATAN, new { @class = "form-control", style = "height:200px" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}




@section Styles {
    @Styles.Render("~/plugins/laddaStyles")
    @Styles.Render("~/plugins/easyautocompleteStyle")
    @Styles.Render("~/plugins/datePickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/ladda")
    @Scripts.Render("~/plugins/easyautocomplete")
    @Scripts.Render("~/plugins/datePicker")
    @Scripts.Render("~/plugins/validate")
    @Scripts.Render("~/plugins/autonumeric")
    @Scripts.Render("~/plugins/clockpicker")

    <script type="text/javascript">
        $(document).ready()
        {
            new AutoNumeric.multiple('.numeric', { unformatOnSubmit: true })
            $('.clockpicker').clockpicker();

            var l = $('.ladda-button-submit').ladda();
            l.click(function () {
                // Start loading
                l.ladda('start');
                // Do something in backend and then stop ladda
                // setTimeout() is only for demo purpose
                setTimeout(function () {
                    l.ladda('stop');
                }, 2000)
            });

            initilize();

            InitSpb('@Url.Action("GetWilayahList", "TrnSpb")');
            InitSales('@Url.Action("GetSalesRef", "TrnSpb")');
            InitProduk('@Url.Action("GetProdukList", "TrnSpb")')
        }

        //SubmitButton
        function PreSubmit(event) {
            var validate = $('#FormCreate').validate({
                errorPlacement: function (error, element) {

                    if (element.parent().attr("class") == "form-group")
                        error.insertAfter(element);
                    else if (element.parent().attr("class") == 'input-group')
                        error.insertAfter(element.parent());
                    else if (element.parent().attr("class").search('easy-autocomplete') >= 0 || element.parent().attr("class") == "row" || element.parent().attr("class") == 'input-group date')
                        error.insertAfter(element.parent());
                    else
                        error.insertAfter(element.parent().parent());
                }
            });

            jQuery.extend(jQuery.validator.messages, {
                required: "Tidak boleh kosong",
                remote: "Please fix this field.",
                email: "Please enter a valid email address.",
                url: "Please enter a valid URL.",
                date: "Please enter a valid date.",
                dateISO: "Please enter a valid date (ISO).",
                number: "Please enter a valid number.",
                digits: "Please enter only digits.",
                creditcard: "Please enter a valid credit card number.",
                equalTo: "Please enter the same value again.",
                accept: "Please enter a value with a valid extension.",
                maxlength: jQuery.validator.format("Please enter no more than {0} characters."),
                minlength: jQuery.validator.format("Please enter at least {0} characters."),
                rangelength: jQuery.validator.format("Please enter a value between {0} and {1} characters long."),
                range: jQuery.validator.format("Please enter a value between {0} and {1}."),
                max: jQuery.validator.format("Please enter a value less than or equal to {0}."),
                min: jQuery.validator.format("Please enter a value greater than or equal to {0}.")
            });
            var isValid = validate.checkForm();
            if (isValid) {
                $('.alert-notification').hide();
                $('#modalSubmit').modal('show');
            }
            else {
                validate.showErrors();
                $('.alert-notification').show();
            }
        }

        function Confirm(event) {
            $("#btnSubmit").trigger('click');
            event.preventDefault();
        }

        //Produk List
        function InitProduk(url) {
            var options = {
                url: url,
                getValue: "DATA",
                template: {
                    type: "description",
                    fields: {
                        description: "DESKRIPSI"
                    }
                },
                list: {
                    match: {
                        enabled: true
                    },
                    sort: {
                        enabled: true
                    },
                    onChooseEvent: function () {
                        GetProduk();
                    }
                }
            };
            $("#NAMA_BARANG").easyAutocomplete(options);
        }

        function GetProduk() {
            var Produk = document.getElementById("NAMA_PRODUK").value;
            $.ajax({
                url: '@Url.Action("GetProduk", "TrnSpb")',
                type: "POST",
                dataType: "JSON",
                data: { Produk: Produk },
                success: function (response) {
                    if (response != null)
                    {
                        $("#KOMPOSISI").val(response.KOMPOSISI);

                        if (response.BENTUK == "Lain-Lain")
                        {
                            $('#BENTUK').val('Lain-Lain');
                            $('#BENTUK_DESC').val(response.BENTUK);
                            $('#BENTUK_DESC').prop('disabled', false);
                            $('#BENTUK_DESC').prop('required', true);
                        }
                        else {
                            $('#BENTUK').val(response.BENTUK);
                            $('#BENTUK_DESC').val('');
                            $('#BENTUK_DESC').prop('disabled', true);
                            $('#BENTUK_DESC').prop('required', false);
                        }

                        if (response.KEMASAN == "Lain-Lain") {
                            $('#KEMASAN').val('Lain-Lain');
                            $('#KEMASAN_DESC').val(response.KEMASAN);
                            $('#KEMASAN_DESC').prop('disabled', false);
                            $('#KEMASAN_DESC').prop('required', true);
                        }
                        else {
                            $('#KEMASAN').val(response.KEMASAN);
                            $('#KEMASAN_DESC').val('');
                            $('#BENTUK_DESC').prop('disabled', true);
                            $('#BENTUK_DESC').prop('required', false);
                        }

                        $("#KOMPOSISI").val(response.KOMPOSISI);
                    }
                },
            });
        }

        $("#BENTUK").change(function () {
            initilize();
        });

        function initilize()
        {
            $('#BENTUK_DESC').prop('disabled', true);
            $('#BENTUK_DESC').prop('required', false);
            $('#BENTUK_DESC').removeClass("error");

            $('#JENIS_PENJUALAN_DESC').prop('disabled', true);
            $('#JENIS_PENJUALAN_DESC').prop('required', false);
            $('#JENIS_PENJUALAN_DESC').removeClass("error");

            $('#KEMASAN_DESC').prop('required', false);
            $('#KEMASAN_DESC').prop('disabled', true);
            $('#KEMASAN_DESC').removeClass("error");

            $('#DOKUMEN_PENDUKUNG_DESC').prop('required', false);
            $('#DOKUMEN_PENDUKUNG_DESC').prop('disabled', true);
            $('#DOKUMEN_PENDUKUNG_DESC').removeClass("error");

            var Bentuk = $('#BENTUK').val();
            if(Bentuk == "Lain-Lain")
            {
                $('#BENTUK_DESC').prop('disabled', false);
                $('#BENTUK_DESC').prop('required', true);
            }

            var JenisPenjualan = $('#JENIS_PENJUALAN').val();
            if (JenisPenjualan == "Lain-Lain") {
                $('#JENIS_PENJUALAN_DESC').prop('disabled', false);
                $('#JENIS_PENJUALAN_DESC').prop('required', true);
            }

            var Kemasan = $('#KEMASAN').val();
            if (Kemasan == "Lain-Lain") {
                $('#KEMASAN_DESC').prop('disabled', false);
                $('#KEMASAN_DESC').prop('required', true);
            }

            var Dokumen = $('#DOKUMEN_PENDUKUNG').val();
            if (Dokumen == "Lain-Lain") {
                $('#DOKUMEN_PENDUKUNG_DESC').prop('disabled', false);
                $('#DOKUMEN_PENDUKUNG_DESC').prop('required', true);
            }
        }
        $('.date').datepicker({
            format: 'dd-M-yyyy'
        });
    </script>
}
